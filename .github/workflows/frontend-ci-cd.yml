name: Frontend CI/CD

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci-cd.yml'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'frontend/**'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    env:
      FRONTEND_IMAGE: fashion-finder-frontend-${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
      BUCKET_SUFFIX: ${{ github.ref == 'refs/heads/main' && '' || '-staging' }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run tests
      run: |
        cd frontend
        npm test -- --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
        fail_ci_if_error: true

    - name: Build frontend
      if: github.event_name == 'push'
      run: |
        cd frontend
        REACT_APP_ENV=${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }} npm run build
      env:
        REACT_APP_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        REACT_APP_API_URL: ${{ secrets.BACKEND_URL }}
        REACT_APP_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        REACT_APP_GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
        REACT_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

    - name: Set up Cloud SDK
      if: github.event_name == 'push'
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Deploy to Cloud Storage
      if: github.event_name == 'push'
      run: |
        cd frontend
        gsutil -m rsync -r build gs://${{ secrets.GCP_BUCKET_NAME }}${{ env.BUCKET_SUFFIX }}

    - name: Set Cache-Control
      if: github.event_name == 'push'
      run: |
        gsutil -m setmeta -h "Cache-Control:public, max-age=3600" gs://${{ secrets.GCP_BUCKET_NAME }}${{ env.BUCKET_SUFFIX }}/**/*.html
        gsutil -m setmeta -h "Cache-Control:public, max-age=31536000" gs://${{ secrets.GCP_BUCKET_NAME }}${{ env.BUCKET_SUFFIX }}/**/*.{css,js,jpg,jpeg,png,gif,svg,woff,woff2}

    - name: Configure Load Balancer
      if: github.event_name == 'push'
      run: |
        gcloud compute url-maps invalidate-cdn-cache ${{ secrets.GCP_LB_NAME }}${{ env.BUCKET_SUFFIX }} \
          --path "/*" \
          --async 