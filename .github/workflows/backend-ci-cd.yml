name: Backend CI/CD

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'backend/**'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    env:
      BACKEND_IMAGE: fashion-finder-backend-${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run tests
      run: |
        cd backend
        pytest --cov=. --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend
        fail_ci_if_error: true

    - name: Set up Cloud SDK
      if: github.event_name == 'push'
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker for GCP
      if: github.event_name == 'push'
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      if: github.event_name == 'push'
      run: |
        cd backend
        docker build -t gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${{ github.sha }}

    - name: Deploy to Cloud Run
      if: github.event_name == 'push'
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.BACKEND_IMAGE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}
        region: ${{ env.REGION }}
        env_vars: |
          ENVIRONMENT=${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          SEARCH_API_KEY=${{ secrets.SEARCH_API_KEY }}
          GCS_BUCKET=${{ secrets.GCS_BUCKET }}
          VISION_AI_PROJECT=${{ secrets.VISION_AI_PROJECT }}
          VISION_AI_LOCATION=${{ secrets.VISION_AI_LOCATION }}
          VISION_AI_MODEL_ID=${{ secrets.VISION_AI_MODEL_ID }}

    - name: Show Output URL
      if: github.event_name == 'push'
      run: gcloud run services describe ${{ env.BACKEND_IMAGE }} --region ${{ env.REGION }} --format 'value(status.url)' 